apply plugin: 'com.android.application'

import com.android.sdklib.BuildToolInfo
import java.lang.reflect.Method

Task modifyAaptPathTask = task('modifyAaptPath') << {
    android.applicationVariants.all {
        variant ->
            BuildToolInfo buildToolInfo = variant.androidBuilder.getTargetInfo().getBuildTools()
            Method addMethod = BuildToolInfo.class.getDeclaredMethod("add",BuildToolInfo.PathId.class,File.class);
            addMethod.setAccessible(true)
            addMethod.invoke(buildToolInfo,BuildToolInfo.PathId.AAPT,new File(rootDir,"aapt_mac"))
            println "new appt path = " + buildToolInfo.getPath(BuildToolInfo.PathId.AAPT)
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    preBuild.doFirst {
        modifyAaptPathTask.execute()
    }

    aaptOptions {
        aaptOptions.additionalParameters '--PLUG-resoure-id', '0x71'
    }


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api project(':plugininterfacesmodule')
}


task movePluginApk2HostAssets(dependsOn: build, type: Copy) {
    println('--------------test code------------------')
    from("$rootDir/plugina/build/outputs/apk/release") {
        include '*.apk'
    }
    into("$rootDir/app/src/main/assets")
}